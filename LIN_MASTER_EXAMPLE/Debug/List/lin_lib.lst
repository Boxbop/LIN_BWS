###############################################################################
#
# IAR C/C++ Compiler V6.50.1.797 for Atmel AVR            04/May/2015  14:10:18
# Copyright 1996-2014 IAR Systems AB.
# Standalone license - IAR Embedded Workbench 4K Kickstart edition for Atmel AVR 6.50
#
#    Source file  =  C:\Users\lisa\Desktop\LIN_BWS\LIB_MCU\LIN_UART\lin_lib.c
#    Command line =  
#        C:\Users\lisa\Desktop\LIN_BWS\LIB_MCU\LIN_UART\lin_lib.c --cpu=can128
#        -ms -o C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\Debug\Obj\ -lC
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\Debug\List\
#        --diag_suppress Pa082 -y --root_variables --no_cse --no_inline
#        --no_code_motion --no_cross_call --no_clustering --no_tbaa --debug
#        -DENABLE_BIT_DEFINITIONS -e -I
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\..\ -I
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\..\..\ -I
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\..\..\..\ -I
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\..\ -I
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\ --eeprom_size 4096
#        --clib -Ohz
#    List file    =  
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\Debug\List\lin_lib.lst
#    Object file  =  
#        C:\Users\lisa\Desktop\LIN_BWS\LIN_MASTER_EXAMPLE\Debug\Obj\lin_lib.r90
#
###############################################################################

C:\Users\lisa\Desktop\LIN_BWS\LIB_MCU\LIN_UART\lin_lib.c
      1          /*
      2          **
      3          ****************************************************************************
      4          **
      5          **
      6          **             Copyright (c) 2004/2005 - Atmel Corporation
      7          **             Proprietary Information
      8          **
      9          ** Project    	: AVR LIN CONTROLLER EXAMPLE
     10          ** Module     	: LIN_LIB.C
     11          ** Description	: LIN v1.3 CONTROLLER (library)
     12          ** Target       : AVRs
     13          ** Compiler    	: IAR Embedded Workbench 4.1
     14          **
     15          **
     16          ** Version :     Date:         Author:      Comment:
     17          **    1.0        5.1.2005    E.G.          Creation
     18          **
     19          **
     20          **
     21          ** LICENSE -
     22          **
     23          ** ATMEL - 2004/2005
     24          ** All software programs are provided 'as is' without warranty of any kind:
     25          ** Atmel does not state the suitability of the provided materials for any
     26          ** purpose. Atmel hereby disclaim all warranties and conditions with regard
     27          ** to the provided software, including all implied warranties, fitness for
     28          ** a particular purpose, title and non-infringement.In no event will Atmel
     29          ** be liable for any indirect or consequential damages or any damages
     30          ** whatsoever resulting from the usage of the software program.
     31          ****************************************************************************
     32          **
     33          */
     34          
     35          /*_____ I N C L U D E - F I L E S ____________________________________________*/
     36          #include "config.h"

   \                                 In  segment ABSOLUTE, at 0xfa, root
   \   union <unnamed> volatile __io _A_CANMSG
   \                     _A_CANMSG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf8, root
   \   union <unnamed> volatile __io _A_CANSTM
   \                     _A_CANSTM:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xf7, root
   \   union <unnamed> volatile __io _A_CANIDM1
   \                     _A_CANIDM1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf6, root
   \   union <unnamed> volatile __io _A_CANIDM2
   \                     _A_CANIDM2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf5, root
   \   union <unnamed> volatile __io _A_CANIDM3
   \                     _A_CANIDM3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf4, root
   \   union <unnamed> volatile __io _A_CANIDM4
   \                     _A_CANIDM4:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf3, root
   \   union <unnamed> volatile __io _A_CANIDT1
   \                     _A_CANIDT1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf2, root
   \   union <unnamed> volatile __io _A_CANIDT2
   \                     _A_CANIDT2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf1, root
   \   union <unnamed> volatile __io _A_CANIDT3
   \                     _A_CANIDT3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xf0, root
   \   union <unnamed> volatile __io _A_CANIDT4
   \                     _A_CANIDT4:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xef, root
   \   union <unnamed> volatile __io _A_CANCDMOB
   \                     _A_CANCDMOB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xee, root
   \   union <unnamed> volatile __io _A_CANSTMOB
   \                     _A_CANSTMOB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xed, root
   \   union <unnamed> volatile __io _A_CANPAGE
   \                     _A_CANPAGE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xec, root
   \   union <unnamed> volatile __io _A_CANHPMOB
   \                     _A_CANHPMOB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xeb, root
   \   union <unnamed> volatile __io _A_CANREC
   \                     _A_CANREC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xea, root
   \   union <unnamed> volatile __io _A_CANTEC
   \                     _A_CANTEC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe8, root
   \   union <unnamed> volatile __io _A_CANTTC
   \                     _A_CANTTC:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xe6, root
   \   union <unnamed> volatile __io _A_CANTIM
   \                     _A_CANTIM:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xe5, root
   \   union <unnamed> volatile __io _A_CANTCON
   \                     _A_CANTCON:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe4, root
   \   union <unnamed> volatile __io _A_CANBT3
   \                     _A_CANBT3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe3, root
   \   union <unnamed> volatile __io _A_CANBT2
   \                     _A_CANBT2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe2, root
   \   union <unnamed> volatile __io _A_CANBT1
   \                     _A_CANBT1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe1, root
   \   union <unnamed> volatile __io _A_CANSIT1
   \                     _A_CANSIT1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xe0, root
   \   union <unnamed> volatile __io _A_CANSIT2
   \                     _A_CANSIT2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xdf, root
   \   union <unnamed> volatile __io _A_CANIE1
   \                     _A_CANIE1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xde, root
   \   union <unnamed> volatile __io _A_CANIE2
   \                     _A_CANIE2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xdd, root
   \   union <unnamed> volatile __io _A_CANEN1
   \                     _A_CANEN1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xdc, root
   \   union <unnamed> volatile __io _A_CANEN2
   \                     _A_CANEN2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xdb, root
   \   union <unnamed> volatile __io _A_CANGIE
   \                     _A_CANGIE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xda, root
   \   union <unnamed> volatile __io _A_CANGIT
   \                     _A_CANGIT:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xd9, root
   \   union <unnamed> volatile __io _A_CANGSTA
   \                     _A_CANGSTA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xd8, root
   \   union <unnamed> volatile __io _A_CANGCON
   \                     _A_CANGCON:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xce, root
   \   union <unnamed> volatile __io _A_UDR1
   \                     _A_UDR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xcc, root
   \   union <unnamed> volatile __io _A_UBRR1
   \                     _A_UBRR1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xca, root
   \   union <unnamed> volatile __io _A_UCSR1C
   \                     _A_UCSR1C:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc9, root
   \   union <unnamed> volatile __io _A_UCSR1B
   \                     _A_UCSR1B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc8, root
   \   union <unnamed> volatile __io _A_UCSR1A
   \                     _A_UCSR1A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc6, root
   \   union <unnamed> volatile __io _A_UDR0
   \                     _A_UDR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc4, root
   \   union <unnamed> volatile __io _A_UBRR0
   \                     _A_UBRR0:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0xc2, root
   \   union <unnamed> volatile __io _A_UCSR0C
   \                     _A_UCSR0C:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc1, root
   \   union <unnamed> volatile __io _A_UCSR0B
   \                     _A_UCSR0B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xc0, root
   \   union <unnamed> volatile __io _A_UCSR0A
   \                     _A_UCSR0A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xbc, root
   \   union <unnamed> volatile __io _A_TWCR
   \                     _A_TWCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xbb, root
   \   union <unnamed> volatile __io _A_TWDR
   \                     _A_TWDR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xba, root
   \   union <unnamed> volatile __io _A_TWAR
   \                     _A_TWAR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb9, root
   \   union <unnamed> volatile __io _A_TWSR
   \                     _A_TWSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb8, root
   \   union <unnamed> volatile __io _A_TWBR
   \                     _A_TWBR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb6, root
   \   union <unnamed> volatile __io _A_ASSR
   \                     _A_ASSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb3, root
   \   union <unnamed> volatile __io _A_OCR2A
   \                     _A_OCR2A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb2, root
   \   union <unnamed> volatile __io _A_TCNT2
   \                     _A_TCNT2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xb0, root
   \   union <unnamed> volatile __io _A_TCCR2A
   \                     _A_TCCR2A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x9c, root
   \   union <unnamed> volatile __io _A_OCR3C
   \                     _A_OCR3C:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x9a, root
   \   union <unnamed> volatile __io _A_OCR3B
   \                     _A_OCR3B:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x98, root
   \   union <unnamed> volatile __io _A_OCR3A
   \                     _A_OCR3A:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x96, root
   \   union <unnamed> volatile __io _A_ICR3
   \                     _A_ICR3:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x94, root
   \   union <unnamed> volatile __io _A_TCNT3
   \                     _A_TCNT3:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x92, root
   \   union <unnamed> volatile __io _A_TCCR3C
   \                     _A_TCCR3C:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x91, root
   \   union <unnamed> volatile __io _A_TCCR3B
   \                     _A_TCCR3B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x90, root
   \   union <unnamed> volatile __io _A_TCCR3A
   \                     _A_TCCR3A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x8c, root
   \   union <unnamed> volatile __io _A_OCR1C
   \                     _A_OCR1C:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x8a, root
   \   union <unnamed> volatile __io _A_OCR1B
   \                     _A_OCR1B:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x88, root
   \   union <unnamed> volatile __io _A_OCR1A
   \                     _A_OCR1A:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x86, root
   \   union <unnamed> volatile __io _A_ICR1
   \                     _A_ICR1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x84, root
   \   union <unnamed> volatile __io _A_TCNT1
   \                     _A_TCNT1:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x82, root
   \   union <unnamed> volatile __io _A_TCCR1C
   \                     _A_TCCR1C:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x81, root
   \   union <unnamed> volatile __io _A_TCCR1B
   \                     _A_TCCR1B:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x80, root
   \   union <unnamed> volatile __io _A_TCCR1A
   \                     _A_TCCR1A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x7f, root
   \   union <unnamed> volatile __io _A_DIDR1
   \                     _A_DIDR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x7e, root
   \   union <unnamed> volatile __io _A_DIDR0
   \                     _A_DIDR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x7c, root
   \   union <unnamed> volatile __io _A_ADMUX
   \                     _A_ADMUX:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x7b, root
   \   union <unnamed> volatile __io _A_ADCSRB
   \                     _A_ADCSRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x7a, root
   \   union <unnamed> volatile __io _A_ADCSRA
   \                     _A_ADCSRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x78, root
   \   union <unnamed> volatile __io _A_ADC
   \                     _A_ADC:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x75, root
   \   union <unnamed> volatile __io _A_XMCRB
   \                     _A_XMCRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x74, root
   \   union <unnamed> volatile __io _A_XMCRA
   \                     _A_XMCRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x71, root
   \   union <unnamed> volatile __io _A_TIMSK3
   \                     _A_TIMSK3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x70, root
   \   union <unnamed> volatile __io _A_TIMSK2
   \                     _A_TIMSK2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x6f, root
   \   union <unnamed> volatile __io _A_TIMSK1
   \                     _A_TIMSK1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x6e, root
   \   union <unnamed> volatile __io _A_TIMSK0
   \                     _A_TIMSK0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x6a, root
   \   union <unnamed> volatile __io _A_EICRB
   \                     _A_EICRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x69, root
   \   union <unnamed> volatile __io _A_EICRA
   \                     _A_EICRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x66, root
   \   union <unnamed> volatile __io _A_OSCCAL
   \                     _A_OSCCAL:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x61, root
   \   union <unnamed> volatile __io _A_CLKPR
   \                     _A_CLKPR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x60, root
   \   union <unnamed> volatile __io _A_WDTCR
   \                     _A_WDTCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x5f, root
   \   union <unnamed> volatile __io _A_SREG
   \                     _A_SREG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x5d, root
   \   union <unnamed> volatile __io _A_SP
   \                     _A_SP:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x5b, root
   \   union <unnamed> volatile __io _A_RAMPZ
   \                     _A_RAMPZ:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x57, root
   \   union <unnamed> volatile __io _A_SPMCSR
   \                     _A_SPMCSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x55, root
   \   union <unnamed> volatile __io _A_MCUCR
   \                     _A_MCUCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x54, root
   \   union <unnamed> volatile __io _A_MCUSR
   \                     _A_MCUSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x53, root
   \   union <unnamed> volatile __io _A_SMCR
   \                     _A_SMCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x51, root
   \   union <unnamed> volatile __io _A_OCDR
   \                     _A_OCDR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x50, root
   \   union <unnamed> volatile __io _A_ACSR
   \                     _A_ACSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4e, root
   \   union <unnamed> volatile __io _A_SPDR
   \                     _A_SPDR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4d, root
   \   union <unnamed> volatile __io _A_SPSR
   \                     _A_SPSR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4c, root
   \   union <unnamed> volatile __io _A_SPCR
   \                     _A_SPCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4b, root
   \   union <unnamed> volatile __io _A_GPIOR2
   \                     _A_GPIOR2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x4a, root
   \   union <unnamed> volatile __io _A_GPIOR1
   \                     _A_GPIOR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x47, root
   \   union <unnamed> volatile __io _A_OCR0A
   \                     _A_OCR0A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x46, root
   \   union <unnamed> volatile __io _A_TCNT0
   \                     _A_TCNT0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x44, root
   \   union <unnamed> volatile __io _A_TCCR0A
   \                     _A_TCCR0A:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x43, root
   \   union <unnamed> volatile __io _A_GTCCR
   \                     _A_GTCCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x41, root
   \   union <unnamed> volatile __io _A_EEAR
   \                     _A_EEAR:
   \   00000000                      DS8 2

   \                                 In  segment ABSOLUTE, at 0x40, root
   \   union <unnamed> volatile __io _A_EEDR
   \                     _A_EEDR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3f, root
   \   union <unnamed> volatile __io _A_EECR
   \                     _A_EECR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3e, root
   \   union <unnamed> volatile __io _A_GPIOR0
   \                     _A_GPIOR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3d, root
   \   union <unnamed> volatile __io _A_EIMSK
   \                     _A_EIMSK:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x3c, root
   \   union <unnamed> volatile __io _A_EIFR
   \                     _A_EIFR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x38, root
   \   union <unnamed> volatile __io _A_TIFR3
   \                     _A_TIFR3:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x37, root
   \   union <unnamed> volatile __io _A_TIFR2
   \                     _A_TIFR2:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x36, root
   \   union <unnamed> volatile __io _A_TIFR1
   \                     _A_TIFR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x35, root
   \   union <unnamed> volatile __io _A_TIFR0
   \                     _A_TIFR0:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x34, root
   \   union <unnamed> volatile __io _A_PORTG
   \                     _A_PORTG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x33, root
   \   union <unnamed> volatile __io _A_DDRG
   \                     _A_DDRG:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x32, root
   \   union <unnamed> volatile __io _A_PING
   \                     _A_PING:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x31, root
   \   union <unnamed> volatile __io _A_PORTF
   \                     _A_PORTF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x30, root
   \   union <unnamed> volatile __io _A_DDRF
   \                     _A_DDRF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2f, root
   \   union <unnamed> volatile __io _A_PINF
   \                     _A_PINF:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2e, root
   \   union <unnamed> volatile __io _A_PORTE
   \                     _A_PORTE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2d, root
   \   union <unnamed> volatile __io _A_DDRE
   \                     _A_DDRE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2c, root
   \   union <unnamed> volatile __io _A_PINE
   \                     _A_PINE:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2b, root
   \   union <unnamed> volatile __io _A_PORTD
   \                     _A_PORTD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x2a, root
   \   union <unnamed> volatile __io _A_DDRD
   \                     _A_DDRD:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x29, root
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x28, root
   \   union <unnamed> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x27, root
   \   union <unnamed> volatile __io _A_DDRC
   \                     _A_DDRC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x26, root
   \   union <unnamed> volatile __io _A_PINC
   \                     _A_PINC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x25, root
   \   union <unnamed> volatile __io _A_PORTB
   \                     _A_PORTB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x24, root
   \   union <unnamed> volatile __io _A_DDRB
   \                     _A_DDRB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x23, root
   \   union <unnamed> volatile __io _A_PINB
   \                     _A_PINB:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x22, root
   \   union <unnamed> volatile __io _A_PORTA
   \                     _A_PORTA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x21, root
   \   union <unnamed> volatile __io _A_DDRA
   \                     _A_DDRA:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x20, root
   \   union <unnamed> volatile __io _A_PINA
   \                     _A_PINA:
   \   00000000                      DS8 1
     37          #include "lin_lib.h"
     38          #include "lin_drv_usart.h"
     39          
     40          /*_____ G L O B A L S ________________________________________________________*/
     41          #ifdef _RUN_TIME_RC_CALIBRATION_ENABLE
     42          extern volatile U8  Timer_IC_cnt;
     43          extern volatile U8 _lin_synchronized;    //lin is synchronized with master (1 - ok within 2%)
     44          #endif
     45          
     46          /*_____ P R I V A T E - F U N C T I O N S - D E C L A R A T I O N ____________*/
     47          
     48          /*_____ L O C A L S __________________________________________________________*/
     49          
     50          /*_____ P U B L I C - F U N C T I O N S ______________________________________*/
     51          
     52          /*_____ P R I V A T E - F U N C T I O N S ____________________________________*/
     53          
     54          
     55          /**
     56          * @fn lin_init
     57          * @brief This function initializes the lin controller.
     58          **/

   \                                 In  segment CODE, align 2, keep-with-next
     59          U8 lin_init (void)
   \                     lin_init:
     60          {
     61            Lin_hw_init();
   \   00000000   ........           CALL    Lin_hw_init
     62            Lin_set_baudrate();
   \   00000004   E205               LDI     R16, 37
   \   00000006   E010               LDI     R17, 0
   \   00000008   ........           CALL    Uart_set_baudrate
     63            Lin_clear_status() ;
   \   0000000C   E000               LDI     R16, 0
   \   0000000E   9300....           STS     _lin_status, R16
     64          
     65          #ifdef _COUNTING_ERRORS_ENABLE
     66            countCERR=0;
   \   00000012   9300....           STS     countCERR, R16
   \   00000016   9300....           STS     (countCERR + 1), R16
     67            countRERR=0;
   \   0000001A   9300....           STS     countRERR, R16
   \   0000001E   9300....           STS     (countRERR + 1), R16
     68            countBERR=0;
   \   00000022   9300....           STS     countBERR, R16
   \   00000026   9300....           STS     (countBERR + 1), R16
     69            countSERR=0;
   \   0000002A   9300....           STS     countSERR, R16
   \   0000002E   9300....           STS     (countSERR + 1), R16
     70            countPERR=0;
   \   00000032   9300....           STS     countPERR, R16
   \   00000036   9300....           STS     (countPERR + 1), R16
     71          #endif
     72          
     73          #ifdef _SLEEP_TIMOUT_DETECTION
     74            LINSleepFlag = 0;
   \   0000003A   9300....           STS     LINSleepFlag, R16
     75          #if LIN_CONFIG == 1 //1:slave 0:master
     76            SleepCtr = 0;
     77            NoBusActivityFlag= 0;
     78            MyCpuIsSleepingFlag = 0;
     79          #endif
     80          #endif
     81          
     82          #ifdef _RUN_TIME_RC_CALIBRATION_ENABLE
     83            _lin_synchronized = 0;
     84          #endif
     85            LIN_TIMER_init(); //to start lin associated timer (tick function)
   \   0000003E   ........           CALL    LIN_TIMER_init
     86            return TRUE;
   \   00000042   E001               LDI     R16, 1
   \   00000044   9508               RET
     87          }
     88          
     89          
     90          /**
     91          * @fn lin_cmd
     92          * @brief This is the lin command interpreter
     93          **/

   \                                 In  segment CODE, align 2, keep-with-next
     94          U8 lin_cmd (st_cmd_lin_t* pt_cmd) {
   \                     lin_cmd:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01D8               MOVW    R27:R26, R17:R16
     95            U8 status;
     96            U8 cpt, temp;
     97          
     98            if ((pt_cmd->cmd ==LIN_CMD_S_TX) &&(pt_cmd->handle == 1))
   \   00000006   01F8               MOVW    R31:R30, R17:R16
   \   00000008   8101               LDD     R16, Z+1
   \   0000000A   3004               CPI     R16, 4
   \   0000000C   F009               BREQ    $+2+2
   \   0000000E   C050               RJMP    ??lin_cmd_0
   \   00000010   910C               LD      R16, X
   \   00000012   3001               CPI     R16, 1
   \   00000014   F009               BREQ    $+2+2
   \   00000016   C04C               RJMP    ??lin_cmd_0
     99            {
    100              temp = lin_dlc_to_nb_byte(pt_cmd->pt_lin_msg->id >> 4);
   \   00000018   9612               ADIW    R27:R26, 2
   \   0000001A   91ED               LD      R30, X+
   \   0000001C   91FC               LD      R31, X
   \   0000001E   9713               SBIW    R27:R26, 3
   \   00000020   8100               LD      R16, Z
   \   00000022   9502               SWAP    R16
   \   00000024   700F               ANDI    R16, 0x0F
   \   00000026   ....               RCALL   lin_dlc_to_nb_byte
   \   00000028   2F10               MOV     R17, R16
    101              Lin_reset_index();
   \   0000002A   E000               LDI     R16, 0
   \   0000002C   9300....           STS     _lin_index, R16
    102              for (cpt=0; cpt < temp; cpt++){
   \   00000030   E050               LDI     R21, 0
   \   00000032   C017               RJMP    ??lin_cmd_1
    103                Lin_set_data(*(pt_cmd->pt_lin_msg->pt_data + cpt));
   \                     ??lin_cmd_2:
   \   00000034   01FD               MOVW    R31:R30, R27:R26
   \   00000036   8122               LDD     R18, Z+2
   \   00000038   81F3               LDD     R31, Z+3
   \   0000003A   2FE2               MOV     R30, R18
   \   0000003C   8121               LDD     R18, Z+1
   \   0000003E   8132               LDD     R19, Z+2
   \   00000040   0F20               ADD     R18, R16
   \   00000042   1F35               ADC     R19, R21
   \   00000044   01F9               MOVW    R31:R30, R19:R18
   \   00000046   8140               LD      R20, Z
   \   00000048   9120....           LDS     R18, _lin_index
   \   0000004C   E0F0               LDI     R31, 0
   \   0000004E   2FE2               MOV     R30, R18
   \   00000050   ....               SUBI    R30, LOW((-(_lin_tab_data) & 0xFFFF))
   \   00000052   ....               SBCI    R31, (-(_lin_tab_data) & 0xFFFF) >> 8
   \   00000054   8340               ST      Z, R20
   \   00000056   9120....           LDS     R18, _lin_index
   \   0000005A   9523               INC     R18
   \   0000005C   9320....           STS     _lin_index, R18
    104              }
   \   00000060   9503               INC     R16
   \                     ??lin_cmd_1:
   \   00000062   1701               CP      R16, R17
   \   00000064   F338               BRCS    ??lin_cmd_2
    105              Lin_cmds_txdata();
   \   00000066   E205               LDI     R16, 37
   \   00000068   E010               LDI     R17, 0
   \   0000006A   ........           CALL    Uart_set_baudrate
   \   0000006E   E109               LDI     R16, 25
   \   00000070   E010               LDI     R17, 0
   \   00000072   ........           CALL    Uart_set_baudrate
   \   00000076   9100....           LDS     R16, _lin_tab_data
   \   0000007A   9300....           STS     _A_UDR1, R16
   \   0000007E   E100               LDI     R16, 16
   \   00000080   9300....           STS     _lin_status, R16
   \   00000084   E003               LDI     R16, 3
   \   00000086   9300....           STS     _lin_cmd, R16
   \   0000008A   E004               LDI     R16, 4
   \   0000008C   9300....           STS     _lin_state, R16
   \   00000090   E001               LDI     R16, 1
   \   00000092   9300....           STS     _lin_cpt, R16
   \   00000096   ....               RCALL   LIN_CalcChecksum
   \   00000098   E010               LDI     R17, 0
   \   0000009A   9300....           STS     _lin_crc, R16
   \   0000009E   9310....           STS     (_lin_crc + 1), R17
   \   000000A2   9100....           LDS     R16, _lin_index
   \   000000A6   950A               DEC     R16
   \   000000A8   9300....           STS     _lin_index, R16
    106              status = LIN_CMD_ACCEPTED;
   \   000000AC   E081               LDI     R24, 1
   \   000000AE   C068               RJMP    ??lin_cmd_3
    107            }
    108            else if ( Lin_get_busy() )
   \                     ??lin_cmd_0:
   \   000000B0   9100....           LDS     R16, _lin_status
   \   000000B4   FF04               SBRS    R16, 4
   \   000000B6   C002               RJMP    ??lin_cmd_4
    109            {
    110              status = LIN_CMD_REFUSED;
   \   000000B8   E080               LDI     R24, 0
   \   000000BA   C062               RJMP    ??lin_cmd_3
    111            }
    112            else
    113            {
    114              status = LIN_CMD_ACCEPTED;
   \                     ??lin_cmd_4:
   \   000000BC   E081               LDI     R24, 1
    115              Lin_clear_status();
   \   000000BE   E000               LDI     R16, 0
   \   000000C0   9300....           STS     _lin_status, R16
    116              Lin_clear_error_status();
   \   000000C4   9300....           STS     _lin_err, R16
    117              switch(pt_cmd->cmd){
   \   000000C8   8101               LDD     R16, Z+1
   \   000000CA   950A               DEC     R16
   \   000000CC   F061               BREQ    ??lin_cmd_5
   \   000000CE   950A               DEC     R16
   \   000000D0   F1D1               BREQ    ??lin_cmd_6
   \   000000D2   950A               DEC     R16
   \   000000D4   F409               BRNE    $+2+2
   \   000000D6   C041               RJMP    ??lin_cmd_7
   \   000000D8   5002               SUBI    R16, 2
   \   000000DA   F409               BRNE    $+2+2
   \   000000DC   C046               RJMP    ??lin_cmd_8
   \   000000DE   950A               DEC     R16
   \   000000E0   F409               BRNE    $+2+2
   \   000000E2   C043               RJMP    ??lin_cmd_8
   \   000000E4   C04D               RJMP    ??lin_cmd_3
    118              case LIN_CMD_M_TX:
    119                pt_cmd->handle = 1;
   \                     ??lin_cmd_5:
   \   000000E6   938C               ST      X, R24
    120                temp = lin_dlc_to_nb_byte(pt_cmd->pt_lin_msg->id >> 4);
   \   000000E8   8102               LDD     R16, Z+2
   \   000000EA   81F3               LDD     R31, Z+3
   \   000000EC   2FE0               MOV     R30, R16
   \   000000EE   8100               LD      R16, Z
   \   000000F0   9502               SWAP    R16
   \   000000F2   700F               ANDI    R16, 0x0F
   \   000000F4   ....               RCALL   lin_dlc_to_nb_byte
   \   000000F6   2F10               MOV     R17, R16
    121                Lin_reset_index();
   \   000000F8   E000               LDI     R16, 0
   \   000000FA   9300....           STS     _lin_index, R16
    122                for (cpt=0; cpt < temp; cpt++){
   \   000000FE   E050               LDI     R21, 0
   \   00000100   C016               RJMP    ??lin_cmd_9
    123                  Lin_set_data(*(pt_cmd->pt_lin_msg->pt_data + cpt));
   \                     ??lin_cmd_10:
   \   00000102   8122               LDD     R18, Z+2
   \   00000104   81F3               LDD     R31, Z+3
   \   00000106   2FE2               MOV     R30, R18
   \   00000108   8121               LDD     R18, Z+1
   \   0000010A   8132               LDD     R19, Z+2
   \   0000010C   0F20               ADD     R18, R16
   \   0000010E   1F35               ADC     R19, R21
   \   00000110   01F9               MOVW    R31:R30, R19:R18
   \   00000112   8140               LD      R20, Z
   \   00000114   9120....           LDS     R18, _lin_index
   \   00000118   E0F0               LDI     R31, 0
   \   0000011A   2FE2               MOV     R30, R18
   \   0000011C   ....               SUBI    R30, LOW((-(_lin_tab_data) & 0xFFFF))
   \   0000011E   ....               SBCI    R31, (-(_lin_tab_data) & 0xFFFF) >> 8
   \   00000120   8340               ST      Z, R20
   \   00000122   9120....           LDS     R18, _lin_index
   \   00000126   9523               INC     R18
   \   00000128   9320....           STS     _lin_index, R18
    124                }
   \   0000012C   9503               INC     R16
   \                     ??lin_cmd_9:
   \   0000012E   1701               CP      R16, R17
   \   00000130   01FD               MOVW    R31:R30, R27:R26
   \   00000132   F338               BRCS    ??lin_cmd_10
    125                Lin_set_id(pt_cmd->pt_lin_msg->id);
   \   00000134   8102               LDD     R16, Z+2
   \   00000136   81F3               LDD     R31, Z+3
   \   00000138   2FE0               MOV     R30, R16
   \   0000013A   8100               LD      R16, Z
   \   0000013C   9300....           STS     _lin_id, R16
    126                Lin_cmdm_txdata();
   \   00000140   ........           CALL    Lin_cmdm_txdata
    127                break;
   \   00000144   C01D               RJMP    ??lin_cmd_3
    128          
    129              case LIN_CMD_M_RX:
    130                pt_cmd->handle = 1;
   \                     ??lin_cmd_6:
   \   00000146   938C               ST      X, R24
    131                Lin_set_id(pt_cmd->pt_lin_msg->id);
   \   00000148   8102               LDD     R16, Z+2
   \   0000014A   81F3               LDD     R31, Z+3
   \   0000014C   2FE0               MOV     R30, R16
   \   0000014E   8100               LD      R16, Z
   \   00000150   9300....           STS     _lin_id, R16
    132                Lin_cmdm_rxdata();
   \   00000154   ........           CALL    Lin_cmdm_rxdata
    133                break;
   \   00000158   C013               RJMP    ??lin_cmd_3
    134          
    135              case LIN_CMD_S_RX:
    136                pt_cmd->handle = 1;
   \                     ??lin_cmd_7:
   \   0000015A   938C               ST      X, R24
    137                Lin_cmds_rxdata();
   \   0000015C   E100               LDI     R16, 16
   \   0000015E   9300....           STS     _lin_status, R16
   \   00000162   E004               LDI     R16, 4
   \   00000164   9300....           STS     _lin_cmd, R16
    138                break;
   \   00000168   C00B               RJMP    ??lin_cmd_3
    139          
    140              case LIN_CMD_WUP:
    141                pt_cmd->handle = 1;
    142                Lin_cmds_wkup();
    143                break;
    144          
    145              case LIN_CMD_SLP:
    146                pt_cmd->handle = 1;
   \                     ??lin_cmd_8:
   \   0000016A   938C               ST      X, R24
    147                Lin_cmds_wkup();
   \   0000016C   E109               LDI     R16, 25
   \   0000016E   E010               LDI     R17, 0
   \   00000170   ........           CALL    Uart_set_baudrate
   \   00000174   E800               LDI     R16, 128
   \   00000176   9300....           STS     _A_UDR1, R16
   \   0000017A   E002               LDI     R16, 2
   \   0000017C   9300....           STS     _lin_status, R16
    148                break;
    149          
    150              default:
    151                break;
    152              }
    153            }
    154            return(status);
   \                     ??lin_cmd_3:
   \   00000180   2F08               MOV     R16, R24
   \   00000182                      REQUIRE ?Subroutine1
   \   00000182                      REQUIRE _A_UDR1
   \   00000182                      ;               // Fall through to label ?Subroutine1
    155          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   E0E4               LDI     R30, 4
   \   00000002   ........           JMP     ?EPILOGUE_B4_L09
    156          
    157          /**
    158          * @fn lin_getstatus
    159          * @brief This function returns the lin controller status.
    160          **/

   \                                 In  segment CODE, align 2, keep-with-next
    161          lin_status_t lin_getstatus (st_cmd_lin_t* pt_cmd){
   \                     lin_getstatus:
   \   00000000   ........           CALL    ?PROLOGUE4_L09
   \   00000004   01C8               MOVW    R25:R24, R17:R16
    162            lin_status_t status;
    163            U8 temp;
    164            U8 cpt;
    165          
    166            if (0 == pt_cmd->handle){
   \   00000006   01F8               MOVW    R31:R30, R17:R16
   \   00000008   8100               LD      R16, Z
   \   0000000A   2300               TST     R16
   \   0000000C   F409               BRNE    $+2+2
   \   0000000E   C05A               RJMP    ??lin_getstatus_0
    167              status = LIN_AVAILABLE;
    168            }else{
    169              temp = Lin_get_status();
   \   00000010   9100....           LDS     R16, _lin_status
   \   00000014   710F               ANDI    R16, 0x1F
    170              if (temp == LIN_STATUS_TX){
   \   00000016   3002               CPI     R16, 2
   \   00000018   F429               BRNE    ??lin_getstatus_1
    171                pt_cmd->handle = 0;
   \   0000001A   E000               LDI     R16, 0
   \   0000001C   8300               ST      Z, R16
    172                Lin_clear_status();
   \   0000001E   9300....           STS     _lin_status, R16
    173                status = LIN_ACTION_COMPLETED;
   \   00000022   C02B               RJMP    ??lin_getstatus_2
    174              }else if (temp == LIN_STATUS_RX){
   \                     ??lin_getstatus_1:
   \   00000024   3001               CPI     R16, 1
   \   00000026   F559               BRNE    ??lin_getstatus_3
    175                pt_cmd->handle = 0;
   \   00000028   E000               LDI     R16, 0
   \   0000002A   8300               ST      Z, R16
    176                Lin_clear_status();
   \   0000002C   9300....           STS     _lin_status, R16
    177                temp = lin_dlc_to_nb_byte(pt_cmd->pt_lin_msg->id >> 4);
   \   00000030   81A2               LDD     R26, Z+2
   \   00000032   81B3               LDD     R27, Z+3
   \   00000034   910C               LD      R16, X
   \   00000036   9502               SWAP    R16
   \   00000038   700F               ANDI    R16, 0x0F
   \   0000003A   ....               RCALL   lin_dlc_to_nb_byte
    178                Lin_reset_index();
   \   0000003C   E010               LDI     R17, 0
   \   0000003E   9310....           STS     _lin_index, R17
    179                for ( cpt=0 ; cpt<temp ; cpt++){
   \   00000042   E040               LDI     R20, 0
   \   00000044   E050               LDI     R21, 0
   \   00000046   C017               RJMP    ??lin_getstatus_4
    180                  *(pt_cmd->pt_lin_msg->pt_data + cpt ) = Lin_get_data();
   \                     ??lin_getstatus_5:
   \   00000048   9120....           LDS     R18, _lin_index
   \   0000004C   E0F0               LDI     R31, 0
   \   0000004E   2FE2               MOV     R30, R18
   \   00000050   ....               SUBI    R30, LOW((-(_lin_tab_data) & 0xFFFF))
   \   00000052   ....               SBCI    R31, (-(_lin_tab_data) & 0xFFFF) >> 8
   \   00000054   8110               LD      R17, Z
   \   00000056   01FC               MOVW    R31:R30, R25:R24
   \   00000058   8122               LDD     R18, Z+2
   \   0000005A   81F3               LDD     R31, Z+3
   \   0000005C   2FE2               MOV     R30, R18
   \   0000005E   8121               LDD     R18, Z+1
   \   00000060   8132               LDD     R19, Z+2
   \   00000062   0F24               ADD     R18, R20
   \   00000064   1F35               ADC     R19, R21
   \   00000066   01F9               MOVW    R31:R30, R19:R18
   \   00000068   8310               ST      Z, R17
    181                  Lin_inc_index();
   \   0000006A   9110....           LDS     R17, _lin_index
   \   0000006E   9513               INC     R17
   \   00000070   9310....           STS     _lin_index, R17
    182                }
   \   00000074   9543               INC     R20
   \                     ??lin_getstatus_4:
   \   00000076   1740               CP      R20, R16
   \   00000078   F338               BRCS    ??lin_getstatus_5
    183                status = LIN_ACTION_COMPLETED;
   \                     ??lin_getstatus_2:
   \   0000007A   E011               LDI     R17, 1
   \   0000007C   C024               RJMP    ??lin_getstatus_6
    184              }else if (temp == LIN_STATUS_ID){
   \                     ??lin_getstatus_3:
   \   0000007E   3004               CPI     R16, 4
   \   00000080   F469               BRNE    ??lin_getstatus_7
    185                pt_cmd->handle = 1;
   \   00000082   E001               LDI     R16, 1
   \   00000084   8300               ST      Z, R16
    186                Lin_clear_status();
   \   00000086   E000               LDI     R16, 0
   \   00000088   9300....           STS     _lin_status, R16
    187                pt_cmd->pt_lin_msg->id = Lin_get_id();
   \   0000008C   9100....           LDS     R16, _lin_id
   \   00000090   730F               ANDI    R16, 0x3F
   \   00000092   81A2               LDD     R26, Z+2
   \   00000094   81B3               LDD     R27, Z+3
   \   00000096   930C               ST      X, R16
    188                status = LIN_ID_RECEIVED;
   \   00000098   E012               LDI     R17, 2
   \   0000009A   C015               RJMP    ??lin_getstatus_6
    189              }else if (temp == LIN_STATUS_ERR){
   \                     ??lin_getstatus_7:
   \   0000009C   3008               CPI     R16, 8
   \   0000009E   F451               BRNE    ??lin_getstatus_8
    190                pt_cmd->handle = 0;
   \   000000A0   E000               LDI     R16, 0
   \   000000A2   8300               ST      Z, R16
    191                Lin_clear_status();
   \   000000A4   9300....           STS     _lin_status, R16
    192                status = (lin_status_t)(0xC0 + Lin_get_error());
   \   000000A8   9110....           LDS     R17, _lin_err
   \   000000AC   5410               SUBI    R17, 64
    193                Lin_clear_error_status();
   \   000000AE   9300....           STS     _lin_err, R16
   \   000000B2   C009               RJMP    ??lin_getstatus_6
    194              }else if (temp == LIN_STATUS_BUSY){
   \                     ??lin_getstatus_8:
   \   000000B4   3100               CPI     R16, 16
   \   000000B6   F411               BRNE    ??lin_getstatus_9
    195                status =LIN_ACTION_ONGOING;
   \   000000B8   E013               LDI     R17, 3
   \   000000BA   C005               RJMP    ??lin_getstatus_6
    196              }else{
    197                if (_lin_state == 0) {
   \                     ??lin_getstatus_9:
   \   000000BC   9100....           LDS     R16, _lin_state
   \   000000C0   2300               TST     R16
   \   000000C2   F409               BRNE    ??lin_getstatus_6
    198                  status =  LIN_AVAILABLE;
   \                     ??lin_getstatus_0:
   \   000000C4   E010               LDI     R17, 0
    199                }
    200              }
    201            }
    202            return (status);
   \                     ??lin_getstatus_6:
   \   000000C6   2F01               MOV     R16, R17
   \   000000C8   ....               RJMP    ?Subroutine1
    203          }
    204          
    205          /**
    206          * @fn nb_byte_to_lin_dlc
    207          * @brief This function converts the lin dlc into
    208          * the associated number of bytes.
    209          **/

   \                                 In  segment CODE, align 2, keep-with-next
    210          U8 lin_dlc_to_nb_byte(U8 dlc_field){
   \                     lin_dlc_to_nb_byte:
    211            U8 nb_byte;
    212          
    213            if (dlc_field < 2){
   \   00000000   3002               CPI     R16, 2
   \   00000002   F408               BRCC    ??lin_dlc_to_nb_byte_0
    214              nb_byte = 2;
   \   00000004   ....               RJMP    ?Subroutine0
    215            }else if (2 == dlc_field){
   \                     ??lin_dlc_to_nb_byte_0:
   \   00000006   F411               BRNE    ??lin_dlc_to_nb_byte_1
    216              nb_byte = 4;
   \   00000008   E004               LDI     R16, 4
   \   0000000A   9508               RET
    217            }else{
    218              nb_byte = 8;
   \                     ??lin_dlc_to_nb_byte_1:
   \   0000000C   E008               LDI     R16, 8
    219            }
    220            return nb_byte;
   \   0000000E   9508               RET
    221          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   E002               LDI     R16, 2
   \   00000002   9508               RET
    222          
    223          /**
    224          * @fn lin_dlc_to_nb_byte
    225          * @brief This function gives the number of byte .
    226          **/

   \                                 In  segment CODE, align 2, keep-with-next
    227          U8 nb_byte_to_lin_dlc(U8 nb_byte){
   \                     nb_byte_to_lin_dlc:
    228            U8 lin_dlc;
    229          
    230            if (nb_byte <= 2){
   \   00000000   3003               CPI     R16, 3
   \   00000002   F410               BRCC    ??nb_byte_to_lin_dlc_0
    231              lin_dlc = 0;
   \   00000004   E000               LDI     R16, 0
   \   00000006   9508               RET
    232            }else if (nb_byte <= 4){
   \                     ??nb_byte_to_lin_dlc_0:
   \   00000008   3005               CPI     R16, 5
   \   0000000A   F408               BRCC    ??nb_byte_to_lin_dlc_1
    233              lin_dlc = 2;
   \   0000000C   ....               RJMP    ?Subroutine0
    234            }else{
    235              lin_dlc = 3;
   \                     ??nb_byte_to_lin_dlc_1:
   \   0000000E   E003               LDI     R16, 3
    236            }
    237            return lin_dlc;
   \   00000010   9508               RET
    238          }
    239          
    240          /**
    241          * @fn _lin_calcchecksum
    242          * @brief Calculates the checksum based on LinData buffer content.
    243          *
    244          **/

   \                                 In  segment CODE, align 2, keep-with-next
    245          U8 LIN_CalcChecksum (void){
   \                     LIN_CalcChecksum:
    246            U16   uiResult = 0x0000;
   \   00000000   E000               LDI     R16, 0
   \   00000002   E010               LDI     R17, 0
    247            U8    index;
    248          
    249            // Add with carry for all LIN Data Bytes
    250            for(index = 0; index < _lin_index; index++) {
   \   00000004   E040               LDI     R20, 0
   \   00000006   E030               LDI     R19, 0
   \   00000008   C00A               RJMP    ??LIN_CalcChecksum_0
    251              uiResult += _lin_tab_data[index];     // Sum
   \                     ??LIN_CalcChecksum_1:
   \   0000000A   E0F0               LDI     R31, 0
   \   0000000C   2FE4               MOV     R30, R20
   \   0000000E   ....               SUBI    R30, LOW((-(_lin_tab_data) & 0xFFFF))
   \   00000010   ....               SBCI    R31, (-(_lin_tab_data) & 0xFFFF) >> 8
   \   00000012   8120               LD      R18, Z
   \   00000014   0F02               ADD     R16, R18
   \   00000016   1F13               ADC     R17, R19
    252              uiResult += ((uiResult & 0x100) >> 8);// Add Carry
    253              uiResult &= 0x00FF;                   // Clear Carry Bit
   \   00000018   0F01               ADD     R16, R17
   \   0000001A   E010               LDI     R17, 0
    254            }
   \   0000001C   9543               INC     R20
   \                     ??LIN_CalcChecksum_0:
   \   0000001E   9120....           LDS     R18, _lin_index
   \   00000022   1742               CP      R20, R18
   \   00000024   F390               BRCS    ??LIN_CalcChecksum_1
    255            return (unsigned char)(~(uiResult & 0x00ff));  // Checksum is inverted sum
   \   00000026   9500               COM     R16
   \   00000028   9508               RET
    256          }
    257          
    258          /**
    259          * @fn lin_initidfiel
    260          * @brief add parity bits to the LIN Identifier.
    261          **/

   \                                 In  segment CODE, align 2, keep-with-next
    262          U8 LIN_InitIdField(U8 lin_id ){
   \                     LIN_InitIdField:
    263            U8 	LINParity0;
    264            U8 	LINParity1;
    265            U8    LinIdField;
    266          
    267            LinIdField = lin_id & 0x3F; //clear parity bits if set
   \   00000000   730F               ANDI    R16, 0x3F
    268          
    269            // Calculate Parity
    270            LINParity0 = (
    271                          (LinIdField & 0x01)
    272                            ^
    273                              ((LinIdField & 0x02) >> 1)
    274                                ^
    275                                  ((LinIdField & 0x04) >> 2 )
    276                                    ^
    277                                      ((LinIdField & 0x10) >> 4)
    278                                        );
   \   00000002   2F30               MOV     R19, R16
   \   00000004   7031               ANDI    R19, 0x01
   \   00000006   FB01               BST     R16, 1
   \   00000008   E010               LDI     R17, 0
   \   0000000A   F910               BLD     R17, 0
   \   0000000C   2731               EOR     R19, R17
   \   0000000E   FB02               BST     R16, 2
   \   00000010   E010               LDI     R17, 0
   \   00000012   F910               BLD     R17, 0
   \   00000014   2731               EOR     R19, R17
   \   00000016   FB04               BST     R16, 4
   \   00000018   E010               LDI     R17, 0
   \   0000001A   F910               BLD     R17, 0
   \   0000001C   2731               EOR     R19, R17
   \   0000001E   7031               ANDI    R19, 0x01
    279          
    280            LINParity1 = ( !(
    281                             ((LinIdField & 0x02) >> 1)
    282                               ^
    283                                 ((LinIdField & 0x08) >> 3)
    284                                   ^
    285                                     ((LinIdField & 0x10) >> 4)
    286                                       ^
    287                                         ((LinIdField & 0x20) >> 5)
    288                                           )
    289                          );
   \   00000020   2F20               MOV     R18, R16
   \   00000022   9525               ASR     R18
   \   00000024   2F10               MOV     R17, R16
   \   00000026   9515               ASR     R17
   \   00000028   9515               ASR     R17
   \   0000002A   9515               ASR     R17
   \   0000002C   2721               EOR     R18, R17
   \   0000002E   2F10               MOV     R17, R16
   \   00000030   9515               ASR     R17
   \   00000032   9515               ASR     R17
   \   00000034   9515               ASR     R17
   \   00000036   9515               ASR     R17
   \   00000038   2721               EOR     R18, R17
   \   0000003A   7021               ANDI    R18, 0x01
   \   0000003C   2F10               MOV     R17, R16
   \   0000003E   9515               ASR     R17
   \   00000040   9515               ASR     R17
   \   00000042   9515               ASR     R17
   \   00000044   9515               ASR     R17
   \   00000046   9515               ASR     R17
   \   00000048   7011               ANDI    R17, 0x01
   \   0000004A   2721               EOR     R18, R17
   \   0000004C   F409               BRNE    ??LIN_InitIdField_0
   \   0000004E   6800               ORI     R16, 0x80
   \                     ??LIN_InitIdField_0:
   \   00000050   2F10               MOV     R17, R16
    290          
    291          
    292            LinIdField |=  ((LINParity1 & 0x01) << 7)|((LINParity0 & 0x01) << 6);  // Add parity to LIN ID Field
    293            return LinIdField;
   \   00000052   E400               LDI     R16, 64
   \   00000054   9F30               MUL     R19, R16
   \   00000056   2910               OR      R17, R0
   \   00000058   2F01               MOV     R16, R17
   \   0000005A   9508               RET
    294          }

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      0      2   LIN_CalcChecksum
      0      2   LIN_InitIdField
      4      2   lin_cmd
        4      2   -> LIN_CalcChecksum
        4      2   -> Lin_cmdm_rxdata
        4      2   -> Lin_cmdm_txdata
        4      2   -> Uart_set_baudrate
        4      2   -> lin_dlc_to_nb_byte
      0      2   lin_dlc_to_nb_byte
      4      2   lin_getstatus
        4      2   -> lin_dlc_to_nb_byte
      0      2   lin_init
        0      2   -> LIN_TIMER_init
        0      2   -> Lin_hw_init
        0      2   -> Uart_set_baudrate
      0      2   nb_byte_to_lin_dlc


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?Subroutine0
       6  ?Subroutine1
      42  LIN_CalcChecksum
      92  LIN_InitIdField
       1  _A_ACSR
       2  _A_ADC
       1  _A_ADCSRA
       1  _A_ADCSRB
       1  _A_ADMUX
       1  _A_ASSR
       1  _A_CANBT1
       1  _A_CANBT2
       1  _A_CANBT3
       1  _A_CANCDMOB
       1  _A_CANEN1
       1  _A_CANEN2
       1  _A_CANGCON
       1  _A_CANGIE
       1  _A_CANGIT
       1  _A_CANGSTA
       1  _A_CANHPMOB
       1  _A_CANIDM1
       1  _A_CANIDM2
       1  _A_CANIDM3
       1  _A_CANIDM4
       1  _A_CANIDT1
       1  _A_CANIDT2
       1  _A_CANIDT3
       1  _A_CANIDT4
       1  _A_CANIE1
       1  _A_CANIE2
       1  _A_CANMSG
       1  _A_CANPAGE
       1  _A_CANREC
       1  _A_CANSIT1
       1  _A_CANSIT2
       2  _A_CANSTM
       1  _A_CANSTMOB
       1  _A_CANTCON
       1  _A_CANTEC
       2  _A_CANTIM
       2  _A_CANTTC
       1  _A_CLKPR
       1  _A_DDRA
       1  _A_DDRB
       1  _A_DDRC
       1  _A_DDRD
       1  _A_DDRE
       1  _A_DDRF
       1  _A_DDRG
       1  _A_DIDR0
       1  _A_DIDR1
       2  _A_EEAR
       1  _A_EECR
       1  _A_EEDR
       1  _A_EICRA
       1  _A_EICRB
       1  _A_EIFR
       1  _A_EIMSK
       1  _A_GPIOR0
       1  _A_GPIOR1
       1  _A_GPIOR2
       1  _A_GTCCR
       2  _A_ICR1
       2  _A_ICR3
       1  _A_MCUCR
       1  _A_MCUSR
       1  _A_OCDR
       1  _A_OCR0A
       2  _A_OCR1A
       2  _A_OCR1B
       2  _A_OCR1C
       1  _A_OCR2A
       2  _A_OCR3A
       2  _A_OCR3B
       2  _A_OCR3C
       1  _A_OSCCAL
       1  _A_PINA
       1  _A_PINB
       1  _A_PINC
       1  _A_PIND
       1  _A_PINE
       1  _A_PINF
       1  _A_PING
       1  _A_PORTA
       1  _A_PORTB
       1  _A_PORTC
       1  _A_PORTD
       1  _A_PORTE
       1  _A_PORTF
       1  _A_PORTG
       1  _A_RAMPZ
       1  _A_SMCR
       2  _A_SP
       1  _A_SPCR
       1  _A_SPDR
       1  _A_SPMCSR
       1  _A_SPSR
       1  _A_SREG
       1  _A_TCCR0A
       1  _A_TCCR1A
       1  _A_TCCR1B
       1  _A_TCCR1C
       1  _A_TCCR2A
       1  _A_TCCR3A
       1  _A_TCCR3B
       1  _A_TCCR3C
       1  _A_TCNT0
       2  _A_TCNT1
       1  _A_TCNT2
       2  _A_TCNT3
       1  _A_TIFR0
       1  _A_TIFR1
       1  _A_TIFR2
       1  _A_TIFR3
       1  _A_TIMSK0
       1  _A_TIMSK1
       1  _A_TIMSK2
       1  _A_TIMSK3
       1  _A_TWAR
       1  _A_TWBR
       1  _A_TWCR
       1  _A_TWDR
       1  _A_TWSR
       2  _A_UBRR0
       2  _A_UBRR1
       1  _A_UCSR0A
       1  _A_UCSR0B
       1  _A_UCSR0C
       1  _A_UCSR1A
       1  _A_UCSR1B
       1  _A_UCSR1C
       1  _A_UDR0
       1  _A_UDR1
       1  _A_WDTCR
       1  _A_XMCRA
       1  _A_XMCRB
     386  lin_cmd
      16  lin_dlc_to_nb_byte
     202  lin_getstatus
      70  lin_init
      18  nb_byte_to_lin_dlc

 
 151 bytes in segment ABSOLUTE
 836 bytes in segment CODE
 
 836 bytes of CODE memory
   0 bytes of DATA memory (+ 151 bytes shared)

Errors: none
Warnings: none
